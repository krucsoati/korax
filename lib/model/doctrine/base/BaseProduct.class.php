<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Product', 'doctrine');

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property varchar $name_hu
 * @property varchar $name_en
 * @property varchar $name_ru
 * @property varchar $name_pl
 * @property text $description_hu
 * @property text $description_en
 * @property text $description_ru
 * @property text $description_pl
 * @property varchar $guide_hu
 * @property varchar $guide_en
 * @property varchar $guide_ru
 * @property varchar $guide_pl
 * @property Category $Category
 * 
 * @method integer  getCategoryId()     Returns the current record's "category_id" value
 * @method varchar  getNameHu()         Returns the current record's "name_hu" value
 * @method varchar  getNameEn()         Returns the current record's "name_en" value
 * @method varchar  getNameRu()         Returns the current record's "name_ru" value
 * @method varchar  getNamePl()         Returns the current record's "name_pl" value
 * @method text     getDescriptionHu()  Returns the current record's "description_hu" value
 * @method text     getDescriptionEn()  Returns the current record's "description_en" value
 * @method text     getDescriptionRu()  Returns the current record's "description_ru" value
 * @method text     getDescriptionPl()  Returns the current record's "description_pl" value
 * @method varchar  getGuideHu()        Returns the current record's "guide_hu" value
 * @method varchar  getGuideEn()        Returns the current record's "guide_en" value
 * @method varchar  getGuideRu()        Returns the current record's "guide_ru" value
 * @method varchar  getGuidePl()        Returns the current record's "guide_pl" value
 * @method Category getCategory()       Returns the current record's "Category" value
 * @method Product  setCategoryId()     Sets the current record's "category_id" value
 * @method Product  setNameHu()         Sets the current record's "name_hu" value
 * @method Product  setNameEn()         Sets the current record's "name_en" value
 * @method Product  setNameRu()         Sets the current record's "name_ru" value
 * @method Product  setNamePl()         Sets the current record's "name_pl" value
 * @method Product  setDescriptionHu()  Sets the current record's "description_hu" value
 * @method Product  setDescriptionEn()  Sets the current record's "description_en" value
 * @method Product  setDescriptionRu()  Sets the current record's "description_ru" value
 * @method Product  setDescriptionPl()  Sets the current record's "description_pl" value
 * @method Product  setGuideHu()        Sets the current record's "guide_hu" value
 * @method Product  setGuideEn()        Sets the current record's "guide_en" value
 * @method Product  setGuideRu()        Sets the current record's "guide_ru" value
 * @method Product  setGuidePl()        Sets the current record's "guide_pl" value
 * @method Product  setCategory()       Sets the current record's "Category" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('category_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             ));
        $this->hasColumn('name_hu', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('name_en', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('name_ru', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('name_pl', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('description_hu', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('description_en', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('description_ru', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('description_pl', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('guide_hu', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('guide_en', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('guide_ru', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));
        $this->hasColumn('guide_pl', 'varchar', 100, array(
             'type' => 'varchar',
             'length' => 100,
             ));

        $this->option('type', 'MYISAM');
        $this->option('collate', 'utf8_hungarian_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}